<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="online.mybatis.mapper.ExamUserMapper">
    <resultMap id="BaseResultMap" type="online.mybatis.model.ExamUser">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="userName" property="username" jdbcType="VARCHAR"/>
        <result column="userPass" property="userpass" jdbcType="VARCHAR"/>
        <result column="userType" property="usertype" jdbcType="VARCHAR"/>
        <result column="userGroup" property="usergroup" jdbcType="VARCHAR"/>
        <result column="userPhone" property="userphone" jdbcType="VARCHAR"/>
        <result column="userAddr" property="useraddr" jdbcType="VARCHAR"/>
        <result column="lastLogin" property="lastlogin" jdbcType="DATE"/>
        <result column="spare1" property="spare1" jdbcType="VARCHAR"/>
        <result column="spare2" property="spare2" jdbcType="VARCHAR"/>
        <result column="spare3" property="spare3" jdbcType="VARCHAR"/>
        <result column="spare4" property="spare4" jdbcType="VARCHAR"/>
        <result column="spare5" property="spare5" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userName, userPass, userType, userGroup, userPhone, userAddr, lastLogin, spare1, 
    spare2, spare3, spare4, spare5
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="online.mybatis.model.ExamUserExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from exam_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from exam_user
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from exam_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="online.mybatis.model.ExamUserExample">
        delete from exam_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="online.mybatis.model.ExamUser">
    insert into exam_user (id, userName, userPass, 
      userType, userGroup, userPhone, 
      userAddr, lastLogin, spare1, 
      spare2, spare3, spare4, 
      spare5)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{userpass,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=VARCHAR}, #{usergroup,jdbcType=VARCHAR}, #{userphone,jdbcType=VARCHAR}, 
      #{useraddr,jdbcType=VARCHAR}, #{lastlogin,jdbcType=DATE}, #{spare1,jdbcType=VARCHAR}, 
      #{spare2,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR}, #{spare4,jdbcType=VARCHAR}, 
      #{spare5,jdbcType=VARCHAR})
  </insert>

    <insert id="insertExcel" parameterType="online.mybatis.model.ExamUserExcel">
    insert into exam_user (id, userName, userPass,
      userType, userGroup, userPhone,
      userAddr, spare3)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{userpass,jdbcType=VARCHAR},
      #{usertype,jdbcType=VARCHAR}, #{usergroup,jdbcType=VARCHAR}, #{userphone,jdbcType=VARCHAR},
      #{useraddr,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="online.mybatis.model.ExamUser">
        insert into exam_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="userpass != null">
                userPass,
            </if>
            <if test="usertype != null">
                userType,
            </if>
            <if test="usergroup != null">
                userGroup,
            </if>
            <if test="userphone != null">
                userPhone,
            </if>
            <if test="useraddr != null">
                userAddr,
            </if>
            <if test="lastlogin != null">
                lastLogin,
            </if>
            <if test="spare1 != null">
                spare1,
            </if>
            <if test="spare2 != null">
                spare2,
            </if>
            <if test="spare3 != null">
                spare3,
            </if>
            <if test="spare4 != null">
                spare4,
            </if>
            <if test="spare5 != null">
                spare5,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userpass != null">
                #{userpass,jdbcType=VARCHAR},
            </if>
            <if test="usertype != null">
                #{usertype,jdbcType=VARCHAR},
            </if>
            <if test="usergroup != null">
                #{usergroup,jdbcType=VARCHAR},
            </if>
            <if test="userphone != null">
                #{userphone,jdbcType=VARCHAR},
            </if>
            <if test="useraddr != null">
                #{useraddr,jdbcType=VARCHAR},
            </if>
            <if test="lastlogin != null">
                #{lastlogin,jdbcType=DATE},
            </if>
            <if test="spare1 != null">
                #{spare1,jdbcType=VARCHAR},
            </if>
            <if test="spare2 != null">
                #{spare2,jdbcType=VARCHAR},
            </if>
            <if test="spare3 != null">
                #{spare3,jdbcType=VARCHAR},
            </if>
            <if test="spare4 != null">
                #{spare4,jdbcType=VARCHAR},
            </if>
            <if test="spare5 != null">
                #{spare5,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="online.mybatis.model.ExamUserExample" resultType="java.lang.Integer">
        select count(*) from exam_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update exam_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                userName = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.userpass != null">
                userPass = #{record.userpass,jdbcType=VARCHAR},
            </if>
            <if test="record.usertype != null">
                userType = #{record.usertype,jdbcType=VARCHAR},
            </if>
            <if test="record.usergroup != null">
                userGroup = #{record.usergroup,jdbcType=VARCHAR},
            </if>
            <if test="record.userphone != null">
                userPhone = #{record.userphone,jdbcType=VARCHAR},
            </if>
            <if test="record.useraddr != null">
                userAddr = #{record.useraddr,jdbcType=VARCHAR},
            </if>
            <if test="record.lastlogin != null">
                lastLogin = #{record.lastlogin,jdbcType=DATE},
            </if>
            <if test="record.spare1 != null">
                spare1 = #{record.spare1,jdbcType=VARCHAR},
            </if>
            <if test="record.spare2 != null">
                spare2 = #{record.spare2,jdbcType=VARCHAR},
            </if>
            <if test="record.spare3 != null">
                spare3 = #{record.spare3,jdbcType=VARCHAR},
            </if>
            <if test="record.spare4 != null">
                spare4 = #{record.spare4,jdbcType=VARCHAR},
            </if>
            <if test="record.spare5 != null">
                spare5 = #{record.spare5,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update exam_user
        set id = #{record.id,jdbcType=VARCHAR},
        userName = #{record.username,jdbcType=VARCHAR},
        userPass = #{record.userpass,jdbcType=VARCHAR},
        userType = #{record.usertype,jdbcType=VARCHAR},
        userGroup = #{record.usergroup,jdbcType=VARCHAR},
        userPhone = #{record.userphone,jdbcType=VARCHAR},
        userAddr = #{record.useraddr,jdbcType=VARCHAR},
        lastLogin = #{record.lastlogin,jdbcType=DATE},
        spare1 = #{record.spare1,jdbcType=VARCHAR},
        spare2 = #{record.spare2,jdbcType=VARCHAR},
        spare3 = #{record.spare3,jdbcType=VARCHAR},
        spare4 = #{record.spare4,jdbcType=VARCHAR},
        spare5 = #{record.spare5,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="online.mybatis.model.ExamUser">
        update exam_user
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="userpass != null">
                userPass = #{userpass,jdbcType=VARCHAR},
            </if>
            <if test="usertype != null">
                userType = #{usertype,jdbcType=VARCHAR},
            </if>
            <if test="usergroup != null">
                userGroup = #{usergroup,jdbcType=VARCHAR},
            </if>
            <if test="userphone != null">
                userPhone = #{userphone,jdbcType=VARCHAR},
            </if>
            <if test="useraddr != null">
                userAddr = #{useraddr,jdbcType=VARCHAR},
            </if>
            <if test="lastlogin != null">
                lastLogin = #{lastlogin,jdbcType=DATE},
            </if>
            <if test="spare1 != null">
                spare1 = #{spare1,jdbcType=VARCHAR},
            </if>
            <if test="spare2 != null">
                spare2 = #{spare2,jdbcType=VARCHAR},
            </if>
            <if test="spare3 != null">
                spare3 = #{spare3,jdbcType=VARCHAR},
            </if>
            <if test="spare4 != null">
                spare4 = #{spare4,jdbcType=VARCHAR},
            </if>
            <if test="spare5 != null">
                spare5 = #{spare5,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="online.mybatis.model.ExamUser">
    update exam_user
    set userName = #{username,jdbcType=VARCHAR},
      userPass = #{userpass,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=VARCHAR},
      userGroup = #{usergroup,jdbcType=VARCHAR},
      userPhone = #{userphone,jdbcType=VARCHAR},
      userAddr = #{useraddr,jdbcType=VARCHAR},
      lastLogin = #{lastlogin,jdbcType=DATE},
      spare1 = #{spare1,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR},
      spare4 = #{spare4,jdbcType=VARCHAR},
      spare5 = #{spare5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>